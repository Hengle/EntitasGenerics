//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventSystemGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed class MaxActionCountEventSystem : Entitas.ReactiveSystem<ConfigEntity> {

    readonly Entitas.IGroup<ConfigEntity> _listeners;

    public MaxActionCountEventSystem(Contexts contexts) : base(contexts.config) {
        _listeners = contexts.config.GetGroup(ConfigMatcher.MaxActionCountListener);
    }

    protected override Entitas.ICollector<ConfigEntity> GetTrigger(Entitas.IContext<ConfigEntity> context) {
        return Entitas.CollectorContextExtension.CreateCollector(
            context, Entitas.TriggerOnEventMatcherExtension.Added(ConfigMatcher.MaxActionCount)
        );
    }

    protected override bool Filter(ConfigEntity entity) {
        return entity.hasMaxActionCount;
    }

    protected override void Execute(System.Collections.Generic.List<ConfigEntity> entities) {
        foreach (var e in entities) {
            var component = e.maxActionCount;
            foreach (var listenerEntity in _listeners) {
                foreach (var listener in listenerEntity.maxActionCountListener.value) {
                    listener.OnMaxActionCount(e, component.value);
                }
            }
        }
    }
}
