//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public MaxActionCountListenerComponent maxActionCountListener { get { return (MaxActionCountListenerComponent)GetComponent(ConfigComponentsLookup.MaxActionCountListener); } }
    public bool hasMaxActionCountListener { get { return HasComponent(ConfigComponentsLookup.MaxActionCountListener); } }

    public void AddMaxActionCountListener(System.Collections.Generic.List<IMaxActionCountListener> newValue) {
        var index = ConfigComponentsLookup.MaxActionCountListener;
        var component = CreateComponent<MaxActionCountListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxActionCountListener(System.Collections.Generic.List<IMaxActionCountListener> newValue) {
        var index = ConfigComponentsLookup.MaxActionCountListener;
        var component = CreateComponent<MaxActionCountListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxActionCountListener() {
        RemoveComponent(ConfigComponentsLookup.MaxActionCountListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherMaxActionCountListener;

    public static Entitas.IMatcher<ConfigEntity> MaxActionCountListener {
        get {
            if (_matcherMaxActionCountListener == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.MaxActionCountListener);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherMaxActionCountListener = matcher;
            }

            return _matcherMaxActionCountListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public void AddMaxActionCountListener(IMaxActionCountListener value) {
        var listeners = hasMaxActionCountListener
            ? maxActionCountListener.value
            : new System.Collections.Generic.List<IMaxActionCountListener>();
        listeners.Add(value);
        ReplaceMaxActionCountListener(listeners);
    }

    public void RemoveMaxActionCountListener(IMaxActionCountListener value, bool removeComponentWhenEmpty = true) {
        var listeners = maxActionCountListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveMaxActionCountListener();
        } else {
            ReplaceMaxActionCountListener(listeners);
        }
    }
}
