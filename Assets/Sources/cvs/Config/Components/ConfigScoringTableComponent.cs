//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity scoringTableEntity { get { return GetGroup(ConfigMatcher.ScoringTable).GetSingleEntity(); } }
    public ScoringTableComponent scoringTable { get { return scoringTableEntity.scoringTable; } }
    public bool hasScoringTable { get { return scoringTableEntity != null; } }

    public ConfigEntity SetScoringTable(System.Collections.Generic.List<int> newValue) {
        if (hasScoringTable) {
            throw new Entitas.EntitasException("Could not set ScoringTable!\n" + this + " already has an entity with ScoringTableComponent!",
                "You should check if the context already has a scoringTableEntity before setting it or use context.ReplaceScoringTable().");
        }
        var entity = CreateEntity();
        entity.AddScoringTable(newValue);
        return entity;
    }

    public void ReplaceScoringTable(System.Collections.Generic.List<int> newValue) {
        var entity = scoringTableEntity;
        if (entity == null) {
            entity = SetScoringTable(newValue);
        } else {
            entity.ReplaceScoringTable(newValue);
        }
    }

    public void RemoveScoringTable() {
        scoringTableEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public ScoringTableComponent scoringTable { get { return (ScoringTableComponent)GetComponent(ConfigComponentsLookup.ScoringTable); } }
    public bool hasScoringTable { get { return HasComponent(ConfigComponentsLookup.ScoringTable); } }

    public void AddScoringTable(System.Collections.Generic.List<int> newValue) {
        var index = ConfigComponentsLookup.ScoringTable;
        var component = CreateComponent<ScoringTableComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceScoringTable(System.Collections.Generic.List<int> newValue) {
        var index = ConfigComponentsLookup.ScoringTable;
        var component = CreateComponent<ScoringTableComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveScoringTable() {
        RemoveComponent(ConfigComponentsLookup.ScoringTable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherScoringTable;

    public static Entitas.IMatcher<ConfigEntity> ScoringTable {
        get {
            if (_matcherScoringTable == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.ScoringTable);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherScoringTable = matcher;
            }

            return _matcherScoringTable;
        }
    }
}
