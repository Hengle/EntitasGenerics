//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity maxActionCountEntity { get { return GetGroup(ConfigMatcher.MaxActionCount).GetSingleEntity(); } }
    public MaxActionCountComponent maxActionCount { get { return maxActionCountEntity.maxActionCount; } }
    public bool hasMaxActionCount { get { return maxActionCountEntity != null; } }

    public ConfigEntity SetMaxActionCount(int newValue) {
        if (hasMaxActionCount) {
            throw new Entitas.EntitasException("Could not set MaxActionCount!\n" + this + " already has an entity with MaxActionCountComponent!",
                "You should check if the context already has a maxActionCountEntity before setting it or use context.ReplaceMaxActionCount().");
        }
        var entity = CreateEntity();
        entity.AddMaxActionCount(newValue);
        return entity;
    }

    public void ReplaceMaxActionCount(int newValue) {
        var entity = maxActionCountEntity;
        if (entity == null) {
            entity = SetMaxActionCount(newValue);
        } else {
            entity.ReplaceMaxActionCount(newValue);
        }
    }

    public void RemoveMaxActionCount() {
        maxActionCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public MaxActionCountComponent maxActionCount { get { return (MaxActionCountComponent)GetComponent(ConfigComponentsLookup.MaxActionCount); } }
    public bool hasMaxActionCount { get { return HasComponent(ConfigComponentsLookup.MaxActionCount); } }

    public void AddMaxActionCount(int newValue) {
        var index = ConfigComponentsLookup.MaxActionCount;
        var component = CreateComponent<MaxActionCountComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxActionCount(int newValue) {
        var index = ConfigComponentsLookup.MaxActionCount;
        var component = CreateComponent<MaxActionCountComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxActionCount() {
        RemoveComponent(ConfigComponentsLookup.MaxActionCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherMaxActionCount;

    public static Entitas.IMatcher<ConfigEntity> MaxActionCount {
        get {
            if (_matcherMaxActionCount == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.MaxActionCount);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherMaxActionCount = matcher;
            }

            return _matcherMaxActionCount;
        }
    }
}
