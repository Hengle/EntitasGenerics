//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity actionCountEntity { get { return GetGroup(GameStateMatcher.ActionCount).GetSingleEntity(); } }
    public ActionCountComponent actionCount { get { return actionCountEntity.actionCount; } }
    public bool hasActionCount { get { return actionCountEntity != null; } }

    public GameStateEntity SetActionCount(int newValue) {
        if (hasActionCount) {
            throw new Entitas.EntitasException("Could not set ActionCount!\n" + this + " already has an entity with ActionCountComponent!",
                "You should check if the context already has a actionCountEntity before setting it or use context.ReplaceActionCount().");
        }
        var entity = CreateEntity();
        entity.AddActionCount(newValue);
        return entity;
    }

    public void ReplaceActionCount(int newValue) {
        var entity = actionCountEntity;
        if (entity == null) {
            entity = SetActionCount(newValue);
        } else {
            entity.ReplaceActionCount(newValue);
        }
    }

    public void RemoveActionCount() {
        actionCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public ActionCountComponent actionCount { get { return (ActionCountComponent)GetComponent(GameStateComponentsLookup.ActionCount); } }
    public bool hasActionCount { get { return HasComponent(GameStateComponentsLookup.ActionCount); } }

    public void AddActionCount(int newValue) {
        var index = GameStateComponentsLookup.ActionCount;
        var component = CreateComponent<ActionCountComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceActionCount(int newValue) {
        var index = GameStateComponentsLookup.ActionCount;
        var component = CreateComponent<ActionCountComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveActionCount() {
        RemoveComponent(GameStateComponentsLookup.ActionCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherActionCount;

    public static Entitas.IMatcher<GameStateEntity> ActionCount {
        get {
            if (_matcherActionCount == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.ActionCount);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherActionCount = matcher;
            }

            return _matcherActionCount;
        }
    }
}
